speedtestdotnet:
  scan_interval:
    minutes: 720
  monitored_conditions:
    - ping
    - download
    - upload
    
input_text:
  card_containers:
    initial: Containers
  software_version:
    initial: Version

# TODO: find ways to combine the too
automation:
  - id: SY001
    alias: 'Battery Alert'
    trigger:
      - platform: time
        at: '12:05:00'
    condition:
      condition: or
      conditions:
        - condition: template
          value_template: >-
            {%- set threshold = 10 -%}
            {%- for item in states.light if ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
            {%- if loop.first -%}
            {{ true }}
            {%- endif -%}
            {%- endfor -%}
        - condition: template
          value_template: >-
            {%- set threshold = 10 -%}
            {%- for item in states.switch if ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
            {%- if loop.first -%}
            {{ true }}
            {%- endif -%}
            {%- endfor -%}
        - condition: template
          value_template: >-
            {%- set threshold = 10 -%}
            {%- for item in states.sensor if ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
            {%- if loop.first -%}
            {{ true }}
            {%- endif -%}
            {%- endfor -%}
        - condition: template
          value_template: >-
            {%- set threshold = 10 -%}
            {%- for item in states.zwave if ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
            {%- if loop.first -%}
            {{ true }}
            {%- endif -%}
            {%- endfor -%}
        - condition: template
          value_template: >-
            {%- set threshold = 10 -%}
            {%- for item in states.lock if ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
            {%- if loop.first -%}
            {{ true }}
            {%- endif -%}
            {%- endfor -%}
    action:
      - service: script.notify
        data_template:
          type: Info
          message: >-
            {%- set threshold = 10 -%}
            {%- set domains = [states.light, states.switch, states.sensor, states.zwave, states.lock ] -%}
            {%- for domain in domains -%}
            {%- if loop.first -%}
            The following devices have low battery levels:
            {%- endif -%}
            {%- for item in domain if ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
            {%- if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
            {{ item.name }} ({{ item.state }}),
            {% endif -%}
            {%- endfor -%}
            {%- endfor -%}

  - id: SY002
    alias: battery notifier
    trigger:
      - platform: time
        at: '12:00:00'
    condition:
      - condition: template
        value_template: >
          # this is the threshold, if the battery goes below 10, the alert will occur.
          {% set battery_alert_threshold = 10 %}
          # the next templateline is complicated.  It selects
          # any objects that have the battery attribute.  Then compares the battery
          # attribute to the battery_alert_threshold.  If the battery is less than the threshold
          # it adds the item to a list.  If the list is greater than or equal to 1 item, 
          # the template will return True, otherwise false.
          {{ states | selectattr('attributes.battery_level', 'defined') | selectattr('attributes.battery_level','<', battery_alert_threshold ) | list | length >= 1 }}
    action:
      - service: script.notify
        data_template:
          type: Info
          message: >
            Batteries low !
            {% set low_batteries = states | selectattr('attributes.battery_level', 'defined') | selectattr('attributes.battery_level','<', battery_alert_threshold ) | map(attribute='name') | list | join(', ') %}
            Low batteries in the following devices: {{ low_batteries }}

  - id: SY003
    alias: Home Assistant Started
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: script.notify
        data_template:
          type: Info
          message: >         
            Home Assistant has re-started
      - delay:
          minutes: 1
      - service: homeassistant.turn_on
        entity_id: automation.addon_update_available

  - id: SY004
    alias: "New Home Assitant Version"
    trigger:
      - platform: state
        entity_id: sensor.hassio_version
    action:
      service: notify.notify
      data:
        title: "New Home Assistant Version"
        message: "Version {{ states.sensor.latest_version.state }} is available!"

  - id: SY005
    alias: Addon Update Available
    initial_state: false
    trigger:
      - platform: template
        value_template: "{{state_attr('sensor.adguard', 'version') != state_attr('sensor.adguard', 'version_latest')}}"
      - platform: template
        value_template: "{{state_attr('sensor.ssh', 'version') != state_attr('sensor.ssh', 'version_latest')}}"
    action:
      service: notify.home_assistant
      data_template:
        title: "Add-On Update Available"
        message: "The {{ trigger.to_state.attributes.friendly_name }} add-on is currently running version {{ trigger.to_state.attributes.version }} and version {{ trigger.to_state.attributes.version_latest }} is available."

  # - id: SY003
  #   alias: 'Set theme at startup'
  #   trigger:
  #     - platform: homeassistant
  #       event: start
  #   action:
  #     service: frontend.set_theme
  #     data:
  #       name: happy

  # Send notification for new sync to minio
  - id: SY006
    alias: Updated file alert
    trigger:
      platform: event
      event_type: folder_watcher
      event_data:
        event_type: modified
        path: '/config/www/sync/sync.log'
    action:
      - service: script.notify
        data_template:
          type: Info
          message: >
            Sync done: {{ trigger.event.data.file }} modified in {{ trigger.event.data.folder }}

  - id: SY007
    alias: 'DNS Change Notification'
    trigger:
    - platform: state
      entity_id: sensor.myip
    action:
    - service: script.notify
      data_template:
        type: Info
        message: >
          IP changed: {{ trigger.from_state.state }} â†’ {{ trigger.to_state.state }}

binary_sensor:
  - platform: template
    sensors:
      # True if there's an update available for supervisor
      updater_supervisor:
        friendly_name: 'Updater - Supervisor'
        device_class: problem
        # entity_id:
        # - sensor.supervisor_updates
        value_template: "{{ state_attr('sensor.supervisor_updates', 'current_version') != state_attr('sensor.supervisor_updates', 'newest_version') }}"
        availability_template: "{{ (states('sensor.supervisor_updates') | int(-1)) > -1 }}"

      # True if there's updates available for any HACS components
      updater_hacs:
        friendly_name: 'Updater - HACS'
        device_class: problem
        # entity_id:
        # - sensor.hacs
        value_template: "{{ states('sensor.hacs') | int > 0 }}"

      # True if there's updates available for any addons
      updater_addons:
        friendly_name: 'Updater - Addons'
        device_class: problem
        # entity_id:
        # - sensor.supervisor_updates
        value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"

alert:

  # Update is available - un-acknowledgeble, auto-dismiss, me only
  # Wait 5 minutes before first to give core config check time to run
    ha_update_available:
      name: HA has an update
      entity_id: binary_sensor.updater
      state: 'on'
      can_acknowledge: false
      repeat: 
      - 5
      - 360
      title: 'Update for HA available'
      message: "New version is {{ state_attr('binary_sensor.updater', 'newest_version') }}. Currently on {{ states('sensor.current_version') }}"
      notifiers:
      - 'signal_info'
      data:
        tag: 'ha-update-available'
        url: 'http://hassio.local/hassio/addon/core_check_config'
        ttl: 21600
  
    # Supervisor update is available - un-acknowledgeable, auto-dismiss, me only
    supervisor_update_available:
      name: Supervisor has an update
      entity_id: binary_sensor.updater_supervisor
      state: 'on'
      can_acknowledge: false
      repeat: 360
      title: 'Update for HA Supervisor available'
      message: "New version is {{ state_attr('sensor.supervisor_updates', 'newest_version') }}. Currently on {{ state_attr('sensor.supervisor_updates', 'current_version') }}"
      notifiers:
      - 'signal_info'
      data:
        tag: 'supervisor-update-available'
        url: 'http://hassio.local/hassio/dashboard'
        ttl: 21600
  
    # HACS repos have updates available - unacknowledgeable, auto-dismiss, me only
    hacs_update_available:
      name: HACS repos have updates
      entity_id: binary_sensor.updater_hacs
      state: 'on'
      can_acknowledge: false
      repeat: 360
      title: "Updates available in {{ states('sensor.hacs') }} HACS repo{% if states('sensor.hacs') | int > 1 %}s{% endif %}"
      message: ""
      notifiers:
        - 'signal_info'
      data:
        tag: 'hacs-update-available'
        url: 'http://hassio.local/hacs/installed'
        ttl: 21600
  
    # Addons have updates available - unacknowledgeable, auto-dismiss, me only
    addon_update_available:
      name: Addons have updates
      entity_id: binary_sensor.updater_addons
      state: 'on'
      can_acknowledge: false
      repeat: 360
      title: "Updates available for {{ states('sensor.supervisor_updates') }} HA addon{% if states('sensor.supervisor_updates') | int > 1 %}s{% endif %}"
      message: ""
      notifiers:
      - 'signal_info'
      data:
        tag: 'addon-update-available'
        url: 'http://hassio.local/hassio/dashboard'
        ttl: 21600

switch: 
  - platform: template
    switches:
      adb_addon:
        value_template: "{{ is_state('sensor.adb_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_adb
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_adb
      mariadb_addon:
        value_template: "{{ is_state('sensor.mariadb_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_mariadb
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_mariadb